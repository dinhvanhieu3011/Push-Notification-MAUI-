@page "/"
@using CommunityToolkit.Mvvm.Messaging;
<button @onclick="CreatePushNotification">Create an Push Notification</button>
<br />
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Title</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in messages)
        {
            <tr @onclick="() => NavigateToDetail(item)">
                <td>@item.CreatedDate</td>
                <td>@item.Title</td>
            </tr>
        }
    </tbody>
</table>


@code {
    FirebaseClient firebaseClient = new FirebaseClient(baseUrl: "https://myapp-fc4db-default-rtdb.asia-southeast1.firebasedatabase.app/");
    List<PushNotification> messages { get; set; } = new List<PushNotification>();
    protected override async Task OnInitializedAsync()
    {
        FirstLoad();
        ListenChanged();
    }

    protected void FirstLoad()
    {
        var list = firebaseClient
                    .Child("notifications")
                    .OrderByKey().LimitToLast(10)
                    .OnceAsync<PushNotification>().Result.Select(x => x.Object).OrderByDescending(x => x.CreatedDate).ToList().Take(10);
        foreach (var item in list)
        {
            messages.Add(item);
        }
    }
    protected void ListenChanged()
    {
        var collection = firebaseClient
                     .Child("notifications")
                     .OrderByKey().LimitToLast(10)
                     .AsObservable<PushNotification>()
                     .Subscribe((item) =>
                     {
                         if (item.Object != null)
                         {
                             messages.Insert(0, item.Object);
                             if (messages.Count > 10)
                             {
                                 messages.RemoveAt(9);
                             }
                             InvokeAsync(StateHasChanged);
                         }
                     });
    }
    private async Task NavigateToDetail(PushNotification item)
    {
        var createdDate = item.CreatedDate.ToString();
        var title = item.Title;
        var body = item.Body;
        Navigation.NavigateTo($"/detail?CreatedDate={createdDate}&title={title}&body={body}");
    }

    private async Task CreatePushNotification()
    {
        string _deviceToken = "";
        if (Preferences.ContainsKey("DeviceToken"))
        {
            _deviceToken = Preferences.Get("DeviceToken", "");
        }
        var androidNotificationObject = new Dictionary<string, string>();
        androidNotificationObject.Add("NavigationID", Guid.NewGuid().ToString());
        var pushNotificationRequest = new PushNotificationRequest
            {
                notification = new NotificationMessageBody
                {
                    title = "Notification Title",
                    body = "Notification body"
                },
                data = androidNotificationObject,
                registration_ids = new List<string> { _deviceToken }
            };
        string url = "https://fcm.googleapis.com/fcm/send";
        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("key", "=" + "AAAAIxVuBHU:APA91bHfmUmwyZir7LEJislHhWwylzZk2dvkAwm7W7CbfKZbaRJBjQfpPPTLknTG6mTu6zctDwSYzNL1HrtgS8WPhcyeRsHgv31eZRFtghF3i-mRqS6A5lrNCqhZKJV75EMFB0Haxg3k");

            string serializeRequest = JsonConvert.SerializeObject(pushNotificationRequest);
            var response = await client.PostAsync(url, new StringContent(serializeRequest, Encoding.UTF8, "application/json"));
            // if (response.StatusCode == System.Net.HttpStatusCode.OK)
            // {
            //     await App.Current.MainPage.DisplayAlert("Notification sent", "notification sent", "OK");
            // }
        }
    }
}
